<div class="container">
   <div class="row">
      <div class="col-md-5">
         <div class="mb-4 mt-3">
            <form id="search-form" method="GET" action="<%= search_orders_path %>">
               <div class="input-group">
                  <input type="text" class="form-control" name="search" id="search-input" placeholder="Search food ...." value="<%= params[:search] %>">
                  <button type="submit" class="btn btn-primary" id="search-button"><i class="bi bi-search"></i></button>
               </div>
            </form>
         </div>
         <div class="filtration-section card border-primary">
            <h4 class="card-header text-center">Filter By:</h4>
            <div class="card-body">
               <div class="form-group text-center">
                  <label for="food_store_filter">Food Store:</label>
                  <select class="form-control" id="food_store_filter">
                     <option value="">All Food Stores</option>
                     <% @food_stores.each do |food_store| %>
                     <option value="<%= food_store.id %>"><%= food_store.name %></option>
                     <% end %>
                  </select>
               </div>
               <div class="form-group text-center">
                  <label for="food_category_filter">Food Category:</label>
                  <select class="form-control" id="food_category_filter">
                     <option value="">All Food Categories</option>
                     <% @food_categories.each do |food_category| %>
                     <option value="<%= food_category.id %>"><%= food_category.name %></option>
                     <% end %>
                  </select>
               </div>
               <div class="text-center mt-3">
                  <button class="btn btn-primary" id="apply_filters_btn"><i class="bi bi-funnel"></i> Apply Filters</button>
                  <button class="btn btn-secondary" id="reset_filters_btn"><i class="bi bi-x"></i> Reset Filters</button>
               </div>
            </div>
         </div>
         <div id="cart-container" class="p-1 overflow-auto">
            <h2 class="text-center mb-4">Cart</h2>
            <table class="table table-striped">
               <thead>
                  <tr>
                     <th>Food Item</th>
                     <th>Quantity</th>
                     <th>Price</th>
                     <th>Food Store</th>
                     <th>Special Ingredients</th>
                     <th>Action</th>
                  </tr>
               </thead>
               <tbody id="cart-items"></tbody>
            </table>
            <div class="total-price text-center">
               <strong>Total Price: <span id="total-price">₹0</span></strong>
            </div>
            <br>
            <div class="d-flex ">
            <div class=p-1>
               <button id="place-order-button" class="btn btn-primary" data-turbolinks="false">Place Order</button></div>
               <div class=p-1><%= link_to 'Back to Employee Dashboard', dashboard_employees_path, class: 'btn btn-warning', style: 'padding: 0.4rem;' %>
</div>
            </div>
         </div>
      </div>
      <div class="col-md-7">
         <div id="search-results">
         </div>
         <div id="food-menu" class="mt-3 d-flex flex-row" style=" flex-wrap: wrap;">
            
         </div>
      </div>
   </div>
</div>
<div class="modal fade" id="confirm-modal" tabindex="-1" role="dialog" aria-labelledby="confirm-modal-label" aria-hidden="true">
   <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
         <div class="modal-header">
            <h5 class="modal-title" id="confirm-modal-label">Confirm Order</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
         </div>
         <div class="modal-body">
            <p>Are you sure you want to place this order?</p>
         </div>
         <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="confirm-order-button">Confirm</button>
         </div>
      </div>
   </div>
</div>
</div>
</div>
<ul class="pagination justify-content-center mt-3">
   <% if @food_menus.current_page > 1 %>
   <li class="page-item">
      <%= link_to '&laquo; Previous'.html_safe, { page: @food_menus.current_page - 1 }, class: 'page-link' %>
   </li>
   <% end %>
   <% (1..@food_menus.total_pages).each do |page| %>
   <% if page == @food_menus.current_page %>
   <li class="page-item active">
      <span class="page-link">
      <%= page %>
      <span class="visually-hidden">(current)</span>
      </span>
   </li>
   <% else %>
   <li class="page-item">
      <%= link_to page, { page: page }, class: 'page-link' %>
   </li>
   <% end %>
   <% end %>
   <% if @food_menus.current_page < @food_menus.total_pages %>
   <li class="page-item">
      <%= link_to 'Next &raquo;'.html_safe, { page: @food_menus.current_page + 1 }, class: 'page-link' %>
   </li>
   <% end %>
</ul>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
   $(document).ready(function() {
     const cart = getCartItems();
   
     function getCartItems() {
       const cartItemsJson = localStorage.getItem('cartItems');
       return cartItemsJson ? JSON.parse(cartItemsJson) : [];
     }
   
     function saveCartItems(cartItems) {
       const cartItemsJson = JSON.stringify(cartItems.filter(Boolean));
       localStorage.setItem('cartItems', cartItemsJson);
     }
   
     function updateCart() {
       const cartItems = $('#cart-items');
       cartItems.empty();
   
       let totalPrice = 0;
   
       for (const item of cart) {
         const itemPrice = (item.quantity * item.price).toFixed(2);
   
         const cartItemHtml = `
           <tr>
             <td>${item.food_item_name}</td>
             <td>${item.quantity}</td>
             <td>₹${itemPrice}</td>
             <td>${item.food_store_name}</td>
             <td>${item.special_ingredients}</td>
             <td><button class="btn btn-danger remove-from-cart-btn" data-index="${cart.indexOf(item)}">Remove</button></td>
           </tr>`;
         
         cartItems.append(cartItemHtml);
         totalPrice += parseFloat(itemPrice);
       }
   
       $('#total-price').text(`₹${totalPrice.toFixed(2)}`);
     }
   
     $(document).on('click', '.add-to-cart-btn', function() {
       const quantityInput = $(this).closest('.input-group').find('.quantity-input');
       
       const quantity = parseInt(quantityInput.val());
       if (isNaN(quantity) || quantity <= 0 || quantity > 20) {
         if (quantity > 20) {
            alert('Quantity should not be greater than 20.');
         } else if (quantity === 0) {
            alert('Quantity should be at least 1.');
         } else {
            alert('Enter a valid quantity.');
         }
         return;
         }
      const specialIngredientsInput = $(this).closest('.input-group').find('.description-input');
      const specialIngredients = specialIngredientsInput.val();

  if (specialIngredients.length > 30) {
    alert('Special ingredients should not exceed 30 characters.');
    return;
  }
       const price = parseFloat($(this).closest('.card-body').find('.food-price').data('price'));
       const name = $(this).closest('.card-body').find('.card-title').text();
       
       const foodStoreName = $(this).data('food-store-name');
   
       if (quantity < 1) {
         alert('Quantity must be at least 1.');
         return;
       }
   
       const existingItem = cart.find(item => item.food_item_name === name && item.food_store_name === foodStoreName);
   
       if (existingItem) {
         existingItem.quantity = quantity;
       } else {
         const cartItem = {
           food_store_name: foodStoreName,
           food_item_name: name,
           quantity: quantity,
           price: price,
           special_ingredients: specialIngredients
         };
         cart.push(cartItem);
       }
   
       saveCartItems(cart);
   
       updateCart();
     });
   
     $(document).on('click', '.remove-from-cart-btn', function() {
       const index = $(this).data('index');
       cart.splice(index, 1);
       saveCartItems(cart);
       updateCart();
     });
   
     $('#place-order-button').click(function() {
       $('#confirm-modal').modal('show');
     });
   
     $('#confirm-order-button').click(function() {
   
        if (cart.length === 0) {
        alert('Add items to the cart before placing the order.');
        return;
      }
       $('#confirm-modal').modal('hide');
   
       const cartItems = getCartItems();
   
       const items = cartItems.map(item => {
         return {
           food_store_name: item.food_store_name,
           food_item_name: item.food_item_name,
           quantity: item.quantity,
           price: item.price,
           special_ingredients: item.special_ingredients
         };
       });
   
       const csrfToken = $('meta[name="csrf-token"]').attr('content');
       const orderData = {
         items: items,
         _token: csrfToken
       };
   
       $.ajax({
         url: '/orders/place_order',
         method: 'POST',
         dataType: 'json',
         contentType: 'application/json',
         data: JSON.stringify(orderData),
         beforeSend: function(xhr) {
           xhr.setRequestHeader('X-CSRF-Token', csrfToken);
         },      
   
         complete: function(xhr) {
         if (xhr.status === 200) {
            
            var cartItemsJSON = localStorage.getItem('cartItems');
    var cartItemsParam = encodeURIComponent(cartItemsJSON);
   
    var currentUserName = '<%= current_user.name %>';
    window.location.href = '/order_details?cartItems=' + cartItemsParam + '&userName=' + encodeURIComponent(currentUserName);
    localStorage.removeItem('cartItems');
        
   
         } else {
            console.error('Failed to place order');
         }
         }
       });
     });   
     function filterSearch(foodStoreId, foodCategoryId) {
     const searchInput = $('#search-input').val();
   
   $.ajax({
     type: 'GET',
     url: $('#search-form').attr('action'),
     data: {
       search: searchInput,
       food_store_filter: foodStoreId, 
       food_category_filter: foodCategoryId,
     },
     dataType: 'html',
     success: function(response) {
       $('#food-menu').html(response);
     },
     error: function(xhr, status, error) {
       console.error(error);
     },
   });
   }   
   function filterSearch(searchInput, foodStoreId, foodCategoryId) {
   $.ajax({
     type: 'GET',
     url: $('#search-form').attr('action'),
     data: {
       search: searchInput,
       food_store_filter: foodStoreId, 
       food_category_filter: foodCategoryId,
     },
     dataType: 'html',
     success: function(response) {
       $('#food-menu').html(response);
   
       if ($('#food-menu').find('.card').length === 0) {
         $('#food-menu').html('<div class="card bg-light mb-3"><div class="card-body" style="border: 1px solid black;"><p class="text-muted">No results found.</p></div></div>');
       }
     },
     error: function(xhr, status, error) {
       console.error(error);
     },
   });
   }
   
   $(document).on('submit', '#search-form', function (e) {
   e.preventDefault();
   
   var searchInput = $('#search-input').val();
   const foodStoreId = $('#food_store_filter').val();
   const foodCategoryId = $('#food_category_filter').val();
   
   filterSearch(searchInput, foodStoreId, foodCategoryId);
   });
   
   $('#apply_filters_btn').click(function() {
   const foodStoreId = $('#food_store_filter').val();
   const foodCategoryId = $('#food_category_filter').val();
   const searchInput = $('#search-input').val();
   
   filterSearch(searchInput, foodStoreId, foodCategoryId);
   });
   
   $('#reset_filters_btn').click(function() {
   $('#food_store_filter').val('');
   $('#food_category_filter').val('');
   const searchInput = $('#search-input').val();
   
   filterSearch(searchInput, '', '');
   });
   
   updateCart();
   
   
   $('#reset_filters_btn').click(function() {
   $('#food_store_filter').val('');
   $('#food_category_filter').val('');
   filterSearch('', '');
   });
   
   filterSearch('', '');
   updateCart();
   });
</script>